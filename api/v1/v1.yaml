openapi: "3.0.0"
info:
  version: 1.0.0
  title: Minimal ping API server
paths:
  /ping:
    get:
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pong'
  /auth:
    post:
      tags:
        - auth
      operationId: auth
      responses:
        '201':
          description: returning autthorized token, wrapped with data and token field
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedToken'
                
components:
  schemas:
    # base types
    Pong:
      type: object
      required:
        - ping
      properties:
        ping:
          type: string
          example: pong
    UnauthorizedError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        message:
          type: string
    ForbiddenError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        message:
          type: string
    NotFoundError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        message:
          type: string
    InternalServerError: 
      type: object
      required:
        - error
      properties:
        error:
          type: string
        message:
          type: string
    BadRequestError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        message:
          type: string
    ValidationError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        message:
          type: string
    ConflictError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        message:
          type: string
    AuthorizedToken:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - token
          properties:
            token:
              type: string
              example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNjI5MjIwNjQyLCJleHAiOjE2Mjk4MjU0NDJ9.1"
    GoneError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        message:
          type: string
    ServiceUnavailableError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        message:
          type: string
    GatewayTimeoutError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        message:
          type: string
    
  responses:
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    ValidationError:
      description: Validation Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    ConflictError:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    GoneError:
      description: Gone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GoneError'
    ServiceUnavailableError:
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceUnavailableError'
    GatewayTimeoutError:
      description: Gateway Timeout
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayTimeoutError'

    AuthorizedTokenResponse:
      description: Authorized Token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizedToken'